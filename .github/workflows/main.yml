# This is a basic workflow to help you get started with Actions

# workflow의 이름을 지정
name: zzz-cicd

# workflow가 언제 실행될 건지 트리거를 지정
on:
  # 푸시를 할시 Github Actions 실행
  push:
    branches: [ main ]

  # 풀 리퀘를 할시 Github Actions 실행
#  pull_request:
#    branches: [ main ]

#  수동 방식으로 Github Actions 실행
#   workflow_dispatch:


# 현재 스크립트에서 사용할 환경변수를 정의하여 사용
env:
  # build 파일이 저장될 AWS S3 버킷이름
  S3_BUCKET_NAME: zzz-deploy
  # S3 버킷안에 들어갈 폴더명과 EC2
  PROJECT_NAME: zzz-project


# workflow는 하나 혹은 그 이상의 job을 가질 수 있고, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    # 해당 workflow를 어떤 OS 환경에서 실행할지에 대한 환경 지정
    runs-on: ubuntu-latest
    # Task의 sequence를 명시한다.
    steps:
        # 깃헙이 제공하는 워크스페이스 (이 workflow를 실행하는 공간)에서 내 저장소가 위치한 곳으로 이동
      - name: Checkout
        uses: actions/checkout@v2

        # JAVA 셋업
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

        # gradlew 에 실행권한을 준다
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

        # 프로젝트를 Build
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

         # S3에 저장할 build 파일을 zip 파일로 압축한다
      - name: Make zip file
        # $GITHUB_SHA = Github Actions에서 제공하는 여러 기본 환경변수중 하나. 현재 workflow를 실행시키는 커밋의 해쉬값
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # Github Actions가 해당 S3 버켓과 CodeDeploy에 접근 할 수 있도록 AWS IAM을 통하여 사용자 역할을 부여해서 권한을 주는 것
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ secrets.AWS_REGION }}

        # S3 버킷에 zip으로 압축된 build 파일을 업로드 한다
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip



        # Code Deploy가 S3에 있는 build 파일을 가져오게한다
      - name: Code Deploy
        run: aws deploy create-deployment --application-name zzz-deploy-application --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name develop --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip


